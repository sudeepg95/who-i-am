---
import { Icon } from "astro-icon/components";
import ThemeSwitcher from "~/components/dumb/theme-switcher.astro";
import { userProfile } from "~/lib/user-profile-manager";

const navItems = userProfile.getFullNavigationItems();
---

<header
  id="page-header"
  class="absolute bottom-0 z-10 flex items-center justify-end w-full px-8 py-4 text-default border-b border-transparent transition-all duration-300"
>
  <div>
    <div class="flex items-center gap-6">
      <nav class="hidden sm:block">
        <ul class="flex items-center gap-6">
          {
            navItems.map(({ title, url }) => (
              <li>
                <a class="text-sm select-none" href={url} target={url.startsWith('https') ? "_blank" : "_self"}>
                  {title}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
      <button
        id="open-nav-button"
        type="button"
        class="btn sm:hidden"
        aria-label="Navigation"
      >
        <Icon name="mdi:menu" size={32} />
      </button>
      <ThemeSwitcher />
    </div>
    <div id="menu-modal" class="hidden modal" aria-hidden="true">
      <div class="fixed inset-0"></div>
      <div class="fixed inset-0 z-10 header-container">
        <div role="dialog" aria-modal="true">
          <header class="text-right px-8 py-4">
            <button
              id="close-nav-button"
              type="button"
              class="btn"
              aria-label="Close navigation"
            >
              <Icon name="mdi:close" size={32} />
            </button>
          </header>
          <nav>
            <ul class="flex flex-col">
              {
                navItems.map(({ title, url }) => (
                  <li>
                    <a class="block py-4 text-xl text-center select-none" href={url}>
                      {title}
                    </a>
                  </li>
                ))
              }
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  import MicroModal from "micromodal";

  const menuModalId = "menu-modal";

  const header: HTMLElement = document.querySelector("#page-header");
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });
</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>

<style>
  .modal.is-open {
    @apply block;
  }

  .fixed-header {
    @apply fixed top-0 bottom-auto;
    @apply text-default bg-default;
    box-shadow: 0 1px 3px 0 var(--color-shadow), 0 1px 2px -1px var(--color-shadow-light);
  }

  :global([data-theme="dark"]) #page-header {
    text-shadow: 0 1px 3px var(--color-text-shadow);
  }
  
  :global([data-theme="dark"]) #page-header.fixed-header {
    background-color: transparent !important;
    backdrop-filter: blur(1px);
    -webkit-backdrop-filter: blur(1px);
  }

  :global([data-theme="light"]) #menu-modal .header-container {
    color: var(--color-text);
    box-shadow: 0 1px 3px 0 var(--color-shadow), 0 1px 2px -1px var(--color-shadow-light);
  }
  
  :global([data-theme="light"]) #menu-modal .header-container > div {
    background-color: var(--color-background);
    color: var(--color-text);
    border-radius: 0.5rem;
    box-shadow: 0 1px 3px 0 var(--color-shadow), 0 1px 2px -1px var(--color-shadow-light);
  }
  
  #menu-modal .header-container > div {
    background-color: var(--color-background);
  }
  
</style>
